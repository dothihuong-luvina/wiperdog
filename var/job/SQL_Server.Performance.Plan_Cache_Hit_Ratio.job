/**
 * Monitoring cached execution plan.<br/>
 * <p>
 * Plan cache like as Procedure Cache, located in the region of memory SQL Server called the Memory Pool.<br/>
 * SQL Server uses memory to store objects such as stored procedures, ad hoc and prepared Transact-SQL statements, and triggers.<br/>
 * </p>
 * @targetVersion 2008 
 * @return get information on the use of plan cache for execute query.
 * @returnParam CacheRequestCnt The number of Cache Hit Ratio from the last monitoring
 * @returnParam LookupRequestCnt The number of Cache Hit Ratio Base from the last monitoring 
 * @returnParam LookupRequestCumCnt Cache Hit Ratio Base
 * @returnParam CacheRequestCumCnt Cache Hit Ratio
 * @returnParam CachePagesCumCnt The number of pages used by cache objects
 * @returnParam CacheObjectCumCnt The number of cache objects in the cache
 * @returnParam CacheObjectsInUseCumCnt The number of cache objects in use
 * @returnParam AccumulatePlanCacheHitRatioPct Percent of cache hit
 * @returnParam PlanCacheHitRatioPct Percent of cache hit from the last monitoring
 */
JOB = [name: "SQL_Server.Performance.Plan_Cache_Hit_Ratio"]

FETCHACTION = {
	def resultData = sql.rows('''
		SELECT 
				counter_name,
				cntr_value
		FROM
				sys.dm_os_performance_counters 
		WHERE 
				OBJECT_NAME like '%Plan Cache%'
				AND instance_name = '_Total'
	'''
	)
	def finalData = [:]
	def convertedData = [:]
	def finalResultData = []
	
	resultData.each{
		it['counter_name'] = it['counter_name'].trim()
		finalData[it['counter_name']] = it['cntr_value']
	}
	
	convertedData["CacheRequestCnt"] = finalData["Cache Hit Ratio"] - (PERSISTENTDATA['CacheRequestCumCnt'] != null ? PERSISTENTDATA['CacheRequestCumCnt'] : 0)
	convertedData["LookupRequestCnt"] = finalData["Cache Hit Ratio Base"] - (PERSISTENTDATA['LookupRequestCumCnt'] != null ? PERSISTENTDATA['LookupRequestCumCnt'] : 0)
	convertedData["LookupRequestCumCnt"] = finalData["Cache Hit Ratio Base"]
	convertedData["CacheRequestCumCnt"] = finalData["Cache Hit Ratio"]
	
	convertedData["CachePagesCumCnt"] = finalData["Cache Pages"]
	convertedData["CacheObjectCumCnt"] = finalData["Cache Object Counts"]
	convertedData["CacheObjectsInUseCumCnt"] = finalData["Cache Objects in use"]

	if(convertedData["LookupRequestCumCnt"] == 0) {
		convertedData['AccumulatePlanCacheHitRatioPct'] = null
	} else {
		convertedData['AccumulatePlanCacheHitRatioPct'] = (convertedData["CacheRequestCumCnt"]/convertedData["LookupRequestCumCnt"])*100
	}
	
	if(convertedData["LookupRequestCnt"] == 0) {
		convertedData['PlanCacheHitRatioPct'] = null
	} else {
		convertedData['PlanCacheHitRatioPct'] = (convertedData["CacheRequestCnt"]/convertedData["LookupRequestCnt"])*100
	}
	
	PERSISTENTDATA['CacheRequestCumCnt'] = finalData["Cache Hit Ratio"]
	PERSISTENTDATA['LookupRequestCumCnt'] = finalData["Cache Hit Ratio Base"]
	finalResultData.add(convertedData)
	return finalResultData
}
KEYEXPR = ['_sequence':['PlanCacheHitRatioPct','AccumulatePlanCacheHitRatioPct']]
KEYEXPR._unit = ["CacheRequestCnt":"count/interval", "LookupRequestCnt":"count/interval", "LookupRequestCumCnt":"count", "CacheRequestCumCnt":"count", "CachePagesCumCnt":"pages", "CacheObjectCumCnt":"count", "CacheObjectsInUseCumCnt":"count", "PlanCacheHitRatioPct":"%","AccumulatePlanCacheHitRatioPct":"%"]
KEYEXPR._chart = [
	[
        "type": "line",
        "name": "Plan Cache Activity",
        "chart_columns": ["CacheRequestCnt", "LookupRequestCnt"],
        "hint_columns": ["CacheRequestCnt", "LookupRequestCnt", "LookupRequestCumCnt", "CacheRequestCumCnt"]
    ],
    [
        "type": "line",
        "name": "Objects Information",
        "chart_columns": ["CachePagesCumCnt","CacheObjectCumCnt", "CacheObjectsInUseCumCnt"],
        "hint_columns": ["CachePagesCumCnt","CacheObjectCumCnt", "CacheObjectsInUseCumCnt"] 
    ],
    
    [
        "type": "line",
        "name": "Cache Hit Ratio",
        "chart_columns": ["PlanCacheHitRatioPct"],
        "hint_columns": ["PlanCacheHitRatioPct", "AccumulatePlanCacheHitRatioPct"]
    ]
]
SENDTYPE = "Store"
RESOURCEID = "Pf/MsPlanCHR"
MONITORINGTYPE = "@DB"
DBTYPE = "@MSSQL"
DEST = parameters.dest